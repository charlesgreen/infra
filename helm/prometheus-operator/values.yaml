prometheus-operator: 
  configReloaderCpu: 10m
  kube-state-metrics:
    podAnnotations:
       sidecar.istio.io/rewriteAppHTTPProbers: "true"
       sidecar.istio.io/proxyCPU: "50m"  
  prometheusOperator:
    admissionWebhooks:
      patch:
         podAnnotations:
            sidecar.istio.io/inject: “false”
  grafana:
    podAnnotations:
      sidecar.istio.io/rewriteAppHTTPProbers: "true"
      sidecar.istio.io/proxyCPU: "50m"  
    grafana.ini:
      auth:
        disable_login_form: true
      auth.google:
        enabled: true
        scopes: https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
        auth_url: https://accounts.google.com/o/oauth2/auth
        token_url: https://accounts.google.com/o/oauth2/token
        allowed_domains: simplycubed.com
        allow_sign_up: true
    service:
      type: NodePort
      annotations:
         beta.cloud.google.com/backend-config: '{"default": "grafana-backend-config"}'
    ingress:
        enabled: false
  prometheus:
    prometheusSpec:
      resources: {}
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 10Gi
      podMetadata:
        annotations:
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
          sidecar.istio.io/proxyCPU: "50m"  
    service:
      type: NodePort
    ingress:
        enabled: false
  alertmanager:
    config:
       global:
         resolve_timeout: 5m
       receivers:
       - name: pagerduty
       route:
         group_by:
         - job
         group_interval: 5m
         group_wait: 30s
         receiver: "pagerduty"
         repeat_interval: 12h
         routes:
         - match:
             alertname: Watchdog
    alertmanagerSpec:
      podMetadata: 
         annotations:
            sidecar.istio.io/rewriteAppHTTPProbers: "true"
            sidecar.istio.io/proxyCPU: "50m"  
    service:
      type: NodePort
    ingress:
      enabled: false
grafanaLocal:
  virtualService:
    enabled: true
  gateway:
    enabled: true
  ingressIstio:
    enabled: true
    path: /*
    annotations:
      kubernetes.io/ingress.class: gce
      networking.gke.io/managed-certificates: grafana
      networking.gke.io/v1beta1.FrontendConfig: ssl-redirect
prometheusLocal:
  virtualService:
    enabled: true
  gateway:
    enabled: true
  ingressIstio:
    enabled: true
    paths:
       - /*
    annotations:
      networking.gke.io/managed-certificates: prometheus
      kubernetes.io/ingress.class: gce
      networking.gke.io/v1beta1.FrontendConfig: ssl-redirect
alertmanagerLocal:
  virtualService:
    enabled: true
  gateway:
    enabled: true
  ingressIstio:
    enabled: true
    paths:
       - /*
    annotations:
      kubernetes.io/ingress.class: gce
      networking.gke.io/managed-certificates: alert-manager
      networking.gke.io/v1beta1.FrontendConfig: ssl-redirect
